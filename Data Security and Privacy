import os
import sys
import socket
import pyfiglet
import re
import time

def clean():
    os.system('clear')

def scanall():
    devices = []
    unknown = []
    for device in os.popen('arp -a'):
        if device[0] == "?":
            unknown.append(device)
        else:
            devices.append(device)
    final_list = '\n'.join(devices)
    unknown_final_list = '\n'.join(unknown)
    print("_" * 70)
    print ("############## Discoverable Devices Found ##############")
    print("-" * 70)
    print (final_list)
    print ("Discoverable Devices count is - ", len(devices)) 
    print("-" * 70)
    print ("############## Unknown Devices Found ##############")
    print("_" * 70)
    print (unknown_final_list)

def portscanner():
    host = socket.gethostname()
    ips = socket.gethostbyname(host)
    target = str(ips)

    print("-" * 35)
    print("Scanning Your Device: IP -  " + str(target))
    print("-" * 35)
    print("-" * 35)
    print("If you would like to cancel the scan, please use CTRL + C, scanning may take some time")
    print("-" * 35)
    print("*" * 80)
    print("                                 Results")
    print("*" * 80)

    try:
        for port in range(1,6000):
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            socket.setdefaulttimeout(0.1)

            result = s.connect_ex((str(target),port))
            if result == 0:
                print ("Port {} is open".format(port))
            s.close
    except KeyboardInterrupt:
        print ("Program Exitting")
        sys.exit()
    except socket.error:
        print("Not responding")
        sys.exit()
    except socket.gaierror:
        print("Hostname cannot be resolved")
        sys.exit()

def portscanner2():
    ips = input ("What is the IP of the device you would like to scan? - ")
    target = str(ips)
    host_check = False

    try:
        socket.inet_aton(target)
        regex = "^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])$"           ##Idea came from this following link https://www.geeksforgeeks.org/python-program-to-validate-an-ip-address/ 
        if (re.search(regex, target)):
            print("Initial IP Address Check Complete - Please wait while we check the host")
            ping_test = os.system("ping -c 1 " + target)                                                                        ##Idea came from this following link https://stackoverflow.com/questions/2535055/check-if-remote-host-is-up-in-python 
            if ping_test != 0:
                print("*" * 80)
                print("            Host not found - Please check host IP address again")
                print("*" * 80)
                portscanner2()
            else:
                print("Host found - Starting Port Scan Now")
        else:
            print("IYou have entered a value that is not an IP Address - Format ###.###.###.###")
            portscanner2()
    except socket.error:
        print("You have entered a value that is not an IP Address - Format ###.###.###.###")
        portscanner2()

    print("-" * 35)
    print("Scanning Device: IP -  " + str(target))
    print("-" * 35)
    print("-" * 35)
    print("If you would like to cancel the scan, please use CTRL + C, scanning may take some time")
    print("-" * 35)
    print("*" * 80)
    print("                                 Results")
    print("*" * 80)

    try:
        for port in range(1,6000):
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            socket.setdefaulttimeout(0.1)

            result = s.connect_ex((str(target),port))
            if result == 0:
                print ("Port {} is open".format(port))
            s.close
    except socket.gaierror:
        print("Hostname cannot be resolved")
        sys.exit()
    except KeyboardInterrupt:
        print ("Program Exitting")
        sys.exit()
    except socket.error:
        print("Not responding")
        sys.exit()

ascii_banner = pyfiglet.figlet_format("Welcome to Michael Bishop's Recon Toolkit")
print(ascii_banner)

def options():
    print("-" * 80)
    print("Option 1. Scan for all network devices on your subnet")
    print("-" * 80)
    print("Option 2. Scan Open Ports on your device")
    print("-" * 80)
    print("Option 3. Scan Open Ports on another device")
    print("-" * 80)
    print("IF YOU WOULD LIKE TO LEAVE THIS TOOL - PLEASE TYPE --> 'Quit'")
    print("-" * 80)

options()
option = input ("What option would you like? (Please type the option number - Like '1') - ")


while True:
    if option == "1":
        clean()
        print("*" * 80)
        print("                               Results Loading")
        print("*" * 80)
        clean()
        scanall()
        print("-" * 80)
        retry = input ("Would you like to see the options agian? (Please type Y or N) - ")
        if retry == "Y":
            options()  
            option = input ("What option would you like? (Please type the option number - Like '1') - ")
        else:
            break
    elif option == "2":
        clean()
        portscanner()
        print("-" * 80)
        print("-" * 80)
        options()
        option = input ("What option would you like? (Please type the option number - Like '1') - ")
    elif option == "3":
        clean()
        portscanner2()
        print("-" * 80)
        print("-" * 80)
        options()
    elif option == "Quit":
        break
    else:
        clean()
        print("*" * 80)
        print("       You enter in an option that is not available - Please try again")
        print("*" * 80)
        options()
        option = input ("What option would you like? (Please type the option number - Like '1') - ")
